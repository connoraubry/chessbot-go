package engine

const starting_fen string = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"

const (
	// EMPTY_BB = Bitboard(0)
	// FULL_BB  = ^EMPTY_BB

	NORTH = 8
	SOUTH = -NORTH
	// EAST  = 1
	// WEST  = -EAST

	// NORTHEAST = NORTH + EAST
	// NORTHWEST = NORTH + WEST
	// SOUTHEAST = SOUTH + EAST
	// SOUTHWEST = SOUTH + WEST

	RANK_1_BB = Bitboard(255)
	RANK_2_BB = RANK_1_BB << 8
	RANK_3_BB = RANK_2_BB << 8
	RANK_4_BB = RANK_3_BB << 8
	RANK_5_BB = RANK_4_BB << 8
	RANK_6_BB = RANK_5_BB << 8
	RANK_7_BB = RANK_6_BB << 8
	RANK_8_BB = RANK_7_BB << 8

	// RANK_BOTTOM_HALF = RANK_1_BB | RANK_2_BB | RANK_3_BB | RANK_4_BB
	// RANK_TOP_HALF    = RANK_5_BB | RANK_6_BB | RANK_7_BB | RANK_8_BB

	FILE_A_BB = Bitboard(72340172838076673)
	FILE_B_BB = FILE_A_BB << 1
	FILE_C_BB = FILE_B_BB << 1
	FILE_D_BB = FILE_C_BB << 1
	FILE_E_BB = FILE_D_BB << 1
	FILE_F_BB = FILE_E_BB << 1
	FILE_G_BB = FILE_F_BB << 1
	FILE_H_BB = FILE_G_BB << 1

	// FILE_LEFT_HALF  = FILE_A_BB | FILE_B_BB | FILE_C_BB | FILE_D_BB
	// FILE_RIGHT_HALF = FILE_E_BB | FILE_F_BB | FILE_G_BB | FILE_H_BB

	// MAIN_DIAGONAL = Bitboard(0b1000000001000000001000000001000000001000000001000000001000000001)
	// DR_DIAGONAL   = Bitboard(72624976668147840)

	RANK_SHIFT_1 = 8
	// RANK_SHIFT_2 = RANK_SHIFT_1 + RANK_SHIFT_1
	// RANK_SHIFT_3 = RANK_SHIFT_2 + RANK_SHIFT_1
	// RANK_SHIFT_4 = RANK_SHIFT_3 + RANK_SHIFT_1
	// RANK_SHIFT_5 = RANK_SHIFT_4 + RANK_SHIFT_1
	// RANK_SHIFT_6 = RANK_SHIFT_5 + RANK_SHIFT_1
	// RANK_SHIFT_7 = RANK_SHIFT_6 + RANK_SHIFT_1

	WOO_EMPTY_BOARD  = 96
	WOOO_EMPTY_BOARD = 14

	BOO_EMPTY_BOARD  = 6917529027641081856
	BOOO_EMPTY_BOARD = 1008806316530991104

	WHITE_KING_START        = Bitboard(16)
	WHITE_KING_OO_CASTLE    = Bitboard(64)
	WHITE_KING_OOO_CASTLE   = Bitboard(4)
	WHITE_KING_ROOK_START   = Bitboard(128)
	WHITE_KING_ROOK_CASTLE  = Bitboard(32)
	WHITE_QUEEN_ROOK_START  = Bitboard(1)
	WHITE_QUEEN_ROOK_CASTLE = Bitboard(8)

	BLACK_KING_START        = Bitboard(1152921504606846976)
	BLACK_KING_OO_CASTLE    = Bitboard(4611686018427387904)
	BLACK_KING_OOO_CASTLE   = Bitboard(288230376151711744)
	BLACK_KING_ROOK_START   = Bitboard(9223372036854775808)
	BLACK_KING_ROOK_CASTLE  = Bitboard(2305843009213693952)
	BLACK_QUEEN_ROOK_START  = Bitboard(72057594037927936)
	BLACK_QUEEN_ROOK_CASTLE = Bitboard(576460752303423488)
)

var RANK_MASKS = [8]Bitboard{RANK_1_BB, RANK_2_BB, RANK_3_BB, RANK_4_BB, RANK_5_BB, RANK_6_BB, RANK_7_BB, RANK_8_BB}
var FILE_MASKS = [8]Bitboard{FILE_A_BB, FILE_B_BB, FILE_C_BB, FILE_D_BB, FILE_E_BB, FILE_F_BB, FILE_G_BB, FILE_H_BB}

// var MaskRows = loadMaskRows()

// func loadMaskRows() [8]Bitboard {
// 	var mr [8]Bitboard
// 	mr[0] = 0
// 	for i := 1; i < 8; i++ {
// 		mr[i] = (mr[i-1] << RANK_SHIFT_1) | RANK_1_BB
// 	}
// 	return mr
// }

var fileToLetter = []rune{'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'}
var rankToLetter = []rune{'1', '2', '3', '4', '5', '6', '7', '8'}

var Promotions = []PieceName{QUEEN, ROOK, BISHOP, KNIGHT}

var StartingPawnRank = map[Player]Bitboard{
	WHITE: RANK_2_BB,
	BLACK: RANK_7_BB,
}

var PawnMoveOffsets = map[Player]int{
	WHITE: NORTH,
	BLACK: SOUTH,
}

var BackRank = map[Player]int{
	WHITE: 7,
	BLACK: 0,
}

type Constants struct {
	BitToIndex map[Bitboard]int
}

var BoardConstants = loadConstants()

func loadConstants() *Constants {
	c := &Constants{}
	c.BitToIndex = make(map[Bitboard]int)
	i := Bitboard(1)
	file := 0
	rank := 0
	for i > 0 {
		c.BitToIndex[i] = file + (rank * 8)
		file += 1
		if file == 8 {
			file = 0
			rank += 1
		}

		i <<= 1
	}
	return c
}

func IndexToRankFile(idx int) (int, int) {
	return idx >> 3, idx & 7
}

var (
	NewKingMoves   = [64]Bitboard{770, 1797, 3594, 7188, 14376, 28752, 57504, 49216, 197123, 460039, 920078, 1840156, 3680312, 7360624, 14721248, 12599488, 50463488, 117769984, 235539968, 471079936, 942159872, 1884319744, 3768639488, 3225468928, 12918652928, 30149115904, 60298231808, 120596463616, 241192927232, 482385854464, 964771708928, 825720045568, 3307175149568, 7718173671424, 15436347342848, 30872694685696, 61745389371392, 123490778742784, 246981557485568, 211384331665408, 846636838289408, 1975852459884544, 3951704919769088, 7903409839538176, 15806819679076352, 31613639358152704, 63227278716305408, 54114388906344448, 216739030602088448, 505818229730443264, 1011636459460886528, 2023272918921773056, 4046545837843546112, 8093091675687092224, 16186183351374184448, 13853283560024178688, 144959613005987840, 362258295026614272, 724516590053228544, 1449033180106457088, 2898066360212914176, 5796132720425828352, 11592265440851656704, 4665729213955833856}
	NewKnightMoves = [64]Bitboard{132096, 329728, 659712, 1319424, 2638848, 5277696, 10489856, 4202496, 33816580, 84410376, 168886289, 337772578, 675545156, 1351090312, 2685403152, 1075839008, 8657044482, 21609056261, 43234889994, 86469779988, 172939559976, 345879119952, 687463207072, 275414786112, 2216203387392, 5531918402816, 11068131838464, 22136263676928, 44272527353856, 88545054707712, 175990581010432, 70506185244672, 567348067172352, 1416171111120896, 2833441750646784, 5666883501293568, 11333767002587136, 22667534005174272, 45053588738670592, 18049583422636032, 145241105196122112, 362539804446949376, 725361088165576704, 1450722176331153408, 2901444352662306816, 5802888705324613632, 11533718717099671552, 4620693356194824192, 288234782788157440, 576469569871282176, 1224997833292120064, 2449995666584240128, 4899991333168480256, 9799982666336960512, 1152939783987658752, 2305878468463689728, 1128098930098176, 2257297371824128, 4796069720358912, 9592139440717824, 19184278881435648, 38368557762871296, 4679521487814656, 9077567998918656}
	NewRookMoves   = [64]Bitboard{72340172838076926, 144680345676153597, 289360691352306939, 578721382704613623, 1157442765409226991, 2314885530818453727, 4629771061636907199, 9259542123273814143, 72340172838141441, 144680345676217602, 289360691352369924, 578721382704674568, 1157442765409283856, 2314885530818502432, 4629771061636939584, 9259542123273813888, 72340172854657281, 144680345692602882, 289360691368494084, 578721382720276488, 1157442765423841296, 2314885530830970912, 4629771061645230144, 9259542123273748608, 72340177082712321, 144680349887234562, 289360695496279044, 578721386714368008, 1157442769150545936, 2314885534022901792, 4629771063767613504, 9259542123257036928, 72341259464802561, 144681423712944642, 289361752209228804, 578722409201797128, 1157443723186933776, 2314886351157207072, 4629771607097753664, 9259542118978846848, 72618349279904001, 144956323094725122, 289632270724367364, 578984165983651848, 1157687956502220816, 2315095537539358752, 4629910699613634624, 9259541023762186368, 143553341945872641, 215330564830528002, 358885010599838724, 645993902138460168, 1220211685215703056, 2368647251370188832, 4665518383679160384, 9259260648297103488, 18302911464433844481, 18231136449196065282, 18087586418720506884, 17800486357769390088, 17226286235867156496, 16077885992062689312, 13781085504453754944, 9187484529235886208}
	NewBishopMoves = [64]Bitboard{9241421688590303744, 36099303471056128, 141012904249856, 550848566272, 6480472064, 1108177604608, 283691315142656, 72624976668147712, 4620710844295151618, 9241421688590368773, 36099303487963146, 141017232965652, 1659000848424, 283693466779728, 72624976676520096, 145249953336262720, 2310355422147510788, 4620710844311799048, 9241421692918565393, 36100411639206946, 424704217196612, 72625527495610504, 145249955479592976, 290499906664153120, 1155177711057110024, 2310355426409252880, 4620711952330133792, 9241705379636978241, 108724279602332802, 145390965166737412, 290500455356698632, 580999811184992272, 577588851267340304, 1155178802063085600, 2310639079102947392, 4693335752243822976, 9386671504487645697, 326598935265674242, 581140276476643332, 1161999073681608712, 288793334762704928, 577868148797087808, 1227793891648880768, 2455587783297826816, 4911175566595588352, 9822351133174399489, 1197958188344280066, 2323857683139004420, 144117404414255168, 360293502378066048, 720587009051099136, 1441174018118909952, 2882348036221108224, 5764696068147249408, 11529391036782871041, 4611756524879479810, 567382630219904, 1416240237150208, 2833579985862656, 5667164249915392, 11334324221640704, 22667548931719168, 45053622886727936, 18049651735527937}
)

func GetBishopDiagonal(rank, file int) Bitboard {
	return NewDiagonals[(rank-file)&15]
}
func GetBishopAntiDiagonal(rank, file int) Bitboard {
	return NewAntiDiagonals[(rank+file)^7]
}

// (rank-file) & 15
var NewDiagonals = [16]Bitboard{9241421688590303745, 4620710844295151872, 2310355422147575808, 1155177711073755136, 577588855528488960, 288794425616760832, 144396663052566528, 72057594037927936, 0, 128, 32832, 8405024, 2151686160, 550831656968, 141012904183812, 36099303471055874}

// (rank+file) ^ 7
var NewAntiDiagonals = [16]Bitboard{72624976668147840, 283691315109952, 1108169199648, 4328785936, 16909320, 66052, 258, 1, 0, 9223372036854775808, 4647714815446351872, 2323998145211531264, 1161999622361579520, 580999813328273408, 290499906672525312, 145249953336295424}
